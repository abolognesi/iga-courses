version: '3.8'
   services:
     api:
       build:
         context: ./docker/php
         dockerfile: Dockerfile
       container_name: api
       volumes:
         - ./backend-ci:/var/www/html
       expose:
         - "9000"  
       depends_on:
         - db
       environment:
         CI_ENVIRONMENT: ${CI_ENVIRONMENT}
         CI_BASE_URL: ${CI_BASE_URL}
       networks:
         - app-network

     api_nginx: 
       image: nginx:alpine
       container_name: api_nginx
       ports:
         - "8080:80" 
       volumes:
         - ./backend-ci:/var/www/html
         - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf 
       depends_on:
         - api
       networks:
         - app-network
     db:
       build:
         context: ./docker/mysql
         dockerfile: Dockerfile
       container_name: db
       volumes:
         - db_data:/var/lib/mysql 
       environment:
         MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
         MYSQL_DATABASE: ${MYSQL_DATABASE}
         MYSQL_USER: ${MYSQL_USER}
         MYSQL_PASSWORD: ${MYSQL_PASSWORD}
       ports:
         - "3306:3306"
       networks:
         - app-network

  vue_app:
    build:
      context: ./frontend-vue
      args:
        API_BASE_URL: ${API_BASE_URL}
      dockerfile: Dockerfile
    container_name: vue_app
    volumes:
      - ./frontend-vue:/app
    ports:
      - "8008:80"
    depends_on:
      - api_nginx
    networks:
      - app-network

  vue_nginx:
    image: nginx:alpine
    container_name: vue_nginx
    volumes:
      - ./frontend-vue/dist:/usr/share/nginx/html 
      - ./docker/nginx-vue/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - vue_app
    networks:
      - app-network

   volumes:
     db_data:

   networks:
     app-network:
       driver: bridge